name: Build AppImage on Fedora

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-appimage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Podman
        run: |
          sudo apt update
          sudo apt install -y podman

      - name: Build AppImage inside Fedora container
        run: |
          podman run --rm -v $PWD:/workspace:Z -w /workspace docker.io/library/fedora:latest bash -c '
            set -e

            # Install dependencies
            dnf install -y wget unzip patchelf desktop-file-utils \
              libX11 libXext libXrender libXcursor libXrandr libXfixes libXcomposite \
              libXdamage libXinerama libXScrnSaver nss alsa-lib xdg-utils \
              glibc-langpack-en

            # Prepare build directory
            mkdir -p appimage-out
            cd appimage-out

            # Download linuxdeploy and plugin
            wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
            chmod +x linuxdeploy-x86_64.AppImage
            ./linuxdeploy-x86_64.AppImage --appimage-extract
            mv squashfs-root linuxdeploy

            wget https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
            chmod +x linuxdeploy-plugin-appimage-x86_64.AppImage
            ./linuxdeploy-plugin-appimage-x86_64.AppImage --appimage-extract
            mv squashfs-root plugin-appimage

            # Run linuxdeploy from extracted AppImage
            ./linuxdeploy/AppRun \
              --appdir AppDir \
              --desktop-file ../your-app.desktop \
              --icon-file ../your-icon.png \
              --executable ../Popcorn-Time \
              --plugin plugin-appimage/AppRun \
              --output appimage
          '

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: PopcornTime.AppImage
          path: appimage-out/*.AppImage
